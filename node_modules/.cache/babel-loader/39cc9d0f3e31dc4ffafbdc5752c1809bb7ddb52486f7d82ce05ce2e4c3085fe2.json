{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeToggleButton=()=>{// 1. Initialize state for the current theme\nconst[theme,setTheme]=useState(localStorage.getItem('theme')||'light');// 2. Function to update the theme on the HTML element\nconst updateThemeOnHtmlEl=theme=>{document.documentElement.setAttribute('data-theme',theme);};// 4. On initial render, set the theme from localStorage\nuseEffect(()=>{updateThemeOnHtmlEl(theme);},[theme]);// 5. Toggle theme when button is clicked\nconst handleThemeToggle=()=>{const newTheme=theme==='dark'?'light':'dark';setTheme(newTheme);localStorage.setItem('theme',newTheme);updateThemeOnHtmlEl(newTheme);};return/*#__PURE__*/_jsx(\"button\",{type:\"button\",\"data-theme-toggle\":true,className:\"w-40-px h-40-px bg-neutral-200 rounded-circle d-flex justify-content-center align-items-center\",onClick:handleThemeToggle,children:\"Toggle Theme\"});};export default ThemeToggleButton;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","ThemeToggleButton","theme","setTheme","localStorage","getItem","updateThemeOnHtmlEl","document","documentElement","setAttribute","handleThemeToggle","newTheme","setItem","type","className","onClick","children"],"sources":["C:/Users/ATS/Downloads/power-c/src/helper/ThemeToggleButton.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ThemeToggleButton = () => {\r\n    // 1. Initialize state for the current theme\r\n    const [theme, setTheme] = useState(localStorage.getItem('theme') || 'light');\r\n\r\n    // 2. Function to update the theme on the HTML element\r\n    const updateThemeOnHtmlEl = (theme) => {\r\n        document.documentElement.setAttribute('data-theme', theme);\r\n    };\r\n\r\n    // 4. On initial render, set the theme from localStorage\r\n    useEffect(() => {\r\n        updateThemeOnHtmlEl(theme);\r\n    }, [theme]);\r\n\r\n    // 5. Toggle theme when button is clicked\r\n    const handleThemeToggle = () => {\r\n        const newTheme = theme === 'dark' ? 'light' : 'dark';\r\n        setTheme(newTheme);\r\n        localStorage.setItem('theme', newTheme);\r\n        updateThemeOnHtmlEl(newTheme);\r\n    };\r\n\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            data-theme-toggle\r\n            className=\"w-40-px h-40-px bg-neutral-200 rounded-circle d-flex justify-content-center align-items-center\"\r\n            onClick={handleThemeToggle}\r\n        >\r\n            Toggle Theme\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ThemeToggleButton;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnD,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC5B;AACA,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGN,QAAQ,CAACO,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAI,OAAO,CAAC,CAE5E;AACA,KAAM,CAAAC,mBAAmB,CAAIJ,KAAK,EAAK,CACnCK,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,CAAEP,KAAK,CAAC,CAC9D,CAAC,CAED;AACAJ,SAAS,CAAC,IAAM,CACZQ,mBAAmB,CAACJ,KAAK,CAAC,CAC9B,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX;AACA,KAAM,CAAAQ,iBAAiB,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,QAAQ,CAAGT,KAAK,GAAK,MAAM,CAAG,OAAO,CAAG,MAAM,CACpDC,QAAQ,CAACQ,QAAQ,CAAC,CAClBP,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAED,QAAQ,CAAC,CACvCL,mBAAmB,CAACK,QAAQ,CAAC,CACjC,CAAC,CAED,mBACIX,IAAA,WACIa,IAAI,CAAC,QAAQ,CACb,wBAAiB,CACjBC,SAAS,CAAC,gGAAgG,CAC1GC,OAAO,CAAEL,iBAAkB,CAAAM,QAAA,CAC9B,cAED,CAAQ,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAf,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}