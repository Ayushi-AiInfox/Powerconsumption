{"ast":null,"code":"import React from'react';import useReactApexChart from'../hook/useReactApexChart';import ReactApexChart from'react-apexcharts';import{useSearchParams}from\"react-router-dom\";import{apiGet,apiPost}from\"../services/client\";import{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MeterChart=()=>{const defaultLineChartOptions={chart:{type:\"area\",toolbar:{show:true}},xaxis:{categories:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]// Ensure these match your months\n},yaxis:{labels:{formatter:value=>\"\".concat(value.toFixed(2)),// Format with two decimal points\nstyle:{fontSize:\"12px\",// Adjust font size for better readability\ncolors:\"#000\"// Ensure the label is visible\n}},tickAmount:6// Controls the number of ticks on the Y-axis\n},grid:{padding:{left:10,// Adjust padding to prevent cutoff\nright:10}},tooltip:{y:{formatter:value=>\"\".concat(value.toFixed(2))// Format values in the tooltip as well\n}},stroke:{curve:\"smooth\"},fill:{opacity:0.4},responsive:[{breakpoint:600,options:{chart:{height:300},yaxis:{labels:{style:{fontSize:\"10px\"}}}}}]};const[searchParams]=useSearchParams();const id=searchParams.get(\"id\");const[data,setData]=useState([]);const getData=async()=>{try{var _res$data;const data={id};const res=await apiPost('userapp/meter-chart',data);if((res===null||res===void 0?void 0:(_res$data=res.data)===null||_res$data===void 0?void 0:_res$data.status)==true){var _res$data2;setData(res===null||res===void 0?void 0:(_res$data2=res.data)===null||_res$data2===void 0?void 0:_res$data2.data);}else{var _res$data3;console.log(res===null||res===void 0?void 0:(_res$data3=res.data)===null||_res$data3===void 0?void 0:_res$data3.message);}}catch(e){console.log(e);}};useEffect(()=>{getData();},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card h-100 p-0\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header border-bottom bg-base py-16 px-24\",children:/*#__PURE__*/_jsx(\"h6\",{className:\"text-lg fw-semibold mb-0\",children:\"Meter Chart (Monthly)\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body p-24\",children:/*#__PURE__*/_jsx(ReactApexChart,{id:\"defaultLineChart\",className:\"apexcharts-tooltip-style-1\",options:defaultLineChartOptions,series:data,type:\"area\",height:264})})]})});};export default MeterChart;","map":{"version":3,"names":["React","useReactApexChart","ReactApexChart","useSearchParams","apiGet","apiPost","useState","useEffect","jsx","_jsx","jsxs","_jsxs","MeterChart","defaultLineChartOptions","chart","type","toolbar","show","xaxis","categories","yaxis","labels","formatter","value","concat","toFixed","style","fontSize","colors","tickAmount","grid","padding","left","right","tooltip","y","stroke","curve","fill","opacity","responsive","breakpoint","options","height","searchParams","id","get","data","setData","getData","_res$data","res","status","_res$data2","_res$data3","console","log","message","e","className","children","series"],"sources":["C:/Users/ATS/Downloads/power-c/src/components/MeterChart.jsx"],"sourcesContent":["import React from 'react'\r\nimport useReactApexChart from '../hook/useReactApexChart'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { apiGet, apiPost } from \"../services/client\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\n\r\nconst MeterChart = () => {\r\n\r\n\r\n    const defaultLineChartOptions = {\r\n        chart: {\r\n          type: \"area\",\r\n          toolbar: {\r\n            show: true,\r\n          },\r\n        },\r\n        xaxis: {\r\n          categories: [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\",\r\n          ], // Ensure these match your months\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            formatter: (value) => `${value.toFixed(2)}`, // Format with two decimal points\r\n            style: {\r\n              fontSize: \"12px\", // Adjust font size for better readability\r\n              colors: \"#000\", // Ensure the label is visible\r\n            },\r\n          },\r\n          tickAmount: 6, // Controls the number of ticks on the Y-axis\r\n        },\r\n        grid: {\r\n          padding: {\r\n            left: 10, // Adjust padding to prevent cutoff\r\n            right: 10,\r\n          },\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: (value) => `${value.toFixed(2)}`, // Format values in the tooltip as well\r\n          },\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n        },\r\n        fill: {\r\n          opacity: 0.4,\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 600,\r\n            options: {\r\n              chart: {\r\n                height: 300,\r\n              },\r\n              yaxis: {\r\n                labels: {\r\n                  style: {\r\n                    fontSize: \"10px\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    const [searchParams] = useSearchParams();\r\n    const id = searchParams.get(\"id\");\r\n\r\n    \r\n    const [data,setData] = useState([]);\r\n\r\n    const getData = async () =>{\r\n\r\n        try{\r\n            const data = {id}\r\n            const res = await apiPost('userapp/meter-chart',data);\r\n            if (res?.data?.status == true){\r\n           \r\n                setData(res?.data?.data);\r\n                \r\n            }\r\n            else{\r\n                console.log(res?.data?.message)\r\n            }\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n      }, []);\r\n\r\n \r\n \r\n    return (\r\n        <div className=\"col-md-6\">\r\n            <div className=\"card h-100 p-0\">\r\n                <div className=\"card-header border-bottom bg-base py-16 px-24\">\r\n                    <h6 className=\"text-lg fw-semibold mb-0\">Meter Chart (Monthly)</h6>\r\n                </div>\r\n                <div className=\"card-body p-24\">\r\n                    <ReactApexChart id=\"defaultLineChart\" className=\"apexcharts-tooltip-style-1\" options={defaultLineChartOptions} series={data} type=\"area\"\r\n                        height={264} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MeterChart"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}