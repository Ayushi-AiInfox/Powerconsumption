# Generated by Django 5.1.4 on 2024-12-16 13:26

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailSender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EMAIL_BACKEND', models.CharField(max_length=255)),
                ('EMAIL_HOST', models.CharField(max_length=255)),
                ('EMAIL_PORT', models.CharField(max_length=255)),
                ('status', models.BooleanField(default=False)),
                ('EMAIL_HOST_PASSWORD', models.CharField(max_length=255)),
                ('DEFAULT_FROM_EMAIL', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'emailsender',
            },
        ),
        migrations.CreateModel(
            name='Memberships',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('amount', models.CharField(max_length=250)),
                ('plan_period', models.CharField(max_length=100, null=True)),
                ('status', models.CharField(default='1', max_length=200)),
                ('limit', models.CharField(max_length=200)),
                ('updated_at', models.CharField(default=datetime.datetime(2024, 12, 16, 13, 26, 54, 740962), max_length=200)),
                ('created_at', models.CharField(default=datetime.datetime(2024, 12, 16, 13, 26, 54, 740962), max_length=200)),
            ],
            options={
                'db_table': 'memberships',
            },
        ),
        migrations.CreateModel(
            name='MeterPowerConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meter_id', models.CharField(max_length=250)),
                ('datetime', models.CharField(max_length=250)),
                ('power', models.CharField(max_length=250)),
                ('Amphere', models.CharField(default='1', max_length=250)),
                ('volt', models.CharField(default='1', max_length=250)),
                ('status', models.CharField(default='1', max_length=200)),
            ],
            options={
                'db_table': 'meterpowerconsumption',
            },
        ),
        migrations.CreateModel(
            name='WsGroupNames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=50)),
                ('meterid', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'wsgroupnames',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('verified_at', models.CharField(default='False', max_length=200)),
                ('role', models.CharField(default='user', max_length=200)),
                ('status', models.CharField(default='1', max_length=20)),
                ('updated_at', models.CharField(default=datetime.datetime(2024, 12, 16, 13, 26, 54, 739926), max_length=200)),
                ('created_at', models.CharField(default=datetime.datetime(2024, 12, 16, 13, 26, 54, 739926), max_length=200)),
                ('remember_token', models.CharField(default='False', max_length=200)),
                ('phone_no', models.CharField(max_length=200, null=True)),
                ('activation_date', models.CharField(default='N/A', max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.CharField(default=100, max_length=255)),
                ('currrency', models.CharField(default=100, max_length=255)),
                ('status', models.CharField(default='1', max_length=200)),
                ('comment', models.CharField(max_length=255, null=True)),
                ('image', models.CharField(max_length=255, null=True)),
                ('created_at', models.CharField(default=datetime.datetime(2024, 12, 16, 18, 56, 54, 744194), max_length=255)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(default=datetime.datetime(2024, 12, 16, 13, 26, 54, 743036), max_length=200)),
                ('status', models.CharField(default='1', max_length=200)),
                ('amount', models.CharField(max_length=250)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'transactions',
            },
        ),
        migrations.CreateModel(
            name='UserMemberships',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='1', max_length=200)),
                ('date', models.CharField(default=datetime.datetime(2024, 12, 16, 13, 26, 54, 741998), max_length=200)),
                ('expire_date', models.CharField(max_length=250, null=True)),
                ('plan_id', models.ForeignKey(db_column='plan_id', on_delete=django.db.models.deletion.CASCADE, to='core.memberships')),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'usermemberships',
            },
        ),
        migrations.CreateModel(
            name='UserMeters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('status', models.CharField(default='1', max_length=200)),
                ('location', models.TextField()),
                ('created_at', models.CharField(default=datetime.datetime(2024, 12, 16, 13, 26, 54, 741998), max_length=200)),
                ('member_id', models.ForeignKey(db_column='member_id', on_delete=django.db.models.deletion.CASCADE, to='core.usermemberships')),
            ],
            options={
                'db_table': 'userdevices',
            },
        ),
        migrations.CreateModel(
            name='UserMeterReadings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_token', models.CharField(default=0, max_length=250)),
                ('power', models.CharField(max_length=200)),
                ('datetime', models.DateTimeField(default=datetime.datetime(2024, 12, 16, 18, 56, 54, 741998))),
                ('data', models.JSONField(default=0, null=True)),
                ('status', models.CharField(default='1', max_length=250)),
                ('meter_id', models.ForeignKey(db_column='meter_id', on_delete=django.db.models.deletion.CASCADE, to='core.usermeters')),
            ],
            options={
                'db_table': 'usermeterreadings',
            },
        ),
        migrations.CreateModel(
            name='Alerts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_name', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('status', models.CharField(max_length=200)),
                ('level', models.CharField(max_length=200)),
                ('meter_id', models.ForeignKey(db_column='meter_id', on_delete=django.db.models.deletion.CASCADE, to='core.usermeters')),
            ],
            options={
                'db_table': 'alerts',
            },
        ),
    ]
